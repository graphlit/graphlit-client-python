# Generated by ariadne-codegen
# Source: ./documents

from typing import Any, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import EntityState, EnvironmentTypes, ResourceConnectorTypes


class GetProject(BaseModel):
    project: Optional["GetProjectProject"]


class GetProjectProject(BaseModel):
    id: str
    name: str
    creation_date: Any = Field(alias="creationDate")
    modified_date: Optional[Any] = Field(alias="modifiedDate")
    state: EntityState
    environment_type: Optional[EnvironmentTypes] = Field(alias="environmentType")
    platform: Optional[ResourceConnectorTypes]
    region: Optional[str]
    credits: Optional[Any]
    last_credits_date: Optional[Any] = Field(alias="lastCreditsDate")
    workflow: Optional["GetProjectProjectWorkflow"]
    specification: Optional["GetProjectProjectSpecification"]
    embeddings: Optional["GetProjectProjectEmbeddings"]
    quota: Optional["GetProjectProjectQuota"]
    callback_uri: Optional[Any] = Field(alias="callbackUri")


class GetProjectProjectWorkflow(BaseModel):
    id: str
    name: str


class GetProjectProjectSpecification(BaseModel):
    id: str
    name: str


class GetProjectProjectEmbeddings(BaseModel):
    text_specification: Optional["GetProjectProjectEmbeddingsTextSpecification"] = (
        Field(alias="textSpecification")
    )
    image_specification: Optional["GetProjectProjectEmbeddingsImageSpecification"] = (
        Field(alias="imageSpecification")
    )


class GetProjectProjectEmbeddingsTextSpecification(BaseModel):
    id: str


class GetProjectProjectEmbeddingsImageSpecification(BaseModel):
    id: str


class GetProjectProjectQuota(BaseModel):
    storage: Optional[Any]
    contents: Optional[int]
    credits: Optional[int]
    feeds: Optional[int]
    posts: Optional[int]
    conversations: Optional[int]


GetProject.model_rebuild()
GetProjectProject.model_rebuild()
GetProjectProjectEmbeddings.model_rebuild()
