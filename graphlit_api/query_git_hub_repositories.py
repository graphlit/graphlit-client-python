# Generated by ariadne-codegen
# Source: ./documents

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel


class QueryGitHubRepositories(BaseModel):
    git_hub_repositories: Optional["QueryGitHubRepositoriesGitHubRepositories"] = Field(
        alias="gitHubRepositories"
    )


class QueryGitHubRepositoriesGitHubRepositories(BaseModel):
    results: Optional[
        List[Optional["QueryGitHubRepositoriesGitHubRepositoriesResults"]]
    ]


class QueryGitHubRepositoriesGitHubRepositoriesResults(BaseModel):
    repository_owner: Optional[str] = Field(alias="repositoryOwner")
    repository_name: Optional[str] = Field(alias="repositoryName")
    repository_full_name: Optional[str] = Field(alias="repositoryFullName")
    description: Optional[str]
    is_private: Optional[bool] = Field(alias="isPrivate")
    stargazers_count: Optional[int] = Field(alias="stargazersCount")
    forks_count: Optional[int] = Field(alias="forksCount")
    pushed_at: Optional[Any] = Field(alias="pushedAt")
    created_at: Optional[Any] = Field(alias="createdAt")
    is_owner: Optional[bool] = Field(alias="isOwner")
    language: Optional[str]


QueryGitHubRepositories.model_rebuild()
QueryGitHubRepositoriesGitHubRepositories.model_rebuild()
