# Generated by ariadne-codegen
# Source: ./documents

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel


class QueryProducts(BaseModel):
    products: Optional["QueryProductsProducts"]


class QueryProductsProducts(BaseModel):
    results: Optional[List[Optional["QueryProductsProductsResults"]]]


class QueryProductsProductsResults(BaseModel):
    id: str
    name: str
    alternate_names: Optional[List[Optional[str]]] = Field(alias="alternateNames")
    creation_date: Any = Field(alias="creationDate")
    uri: Optional[Any]
    description: Optional[str]
    identifier: Optional[str]
    thing: Optional[str]
    relevance: Optional[float]
    address: Optional["QueryProductsProductsResultsAddress"]
    manufacturer: Optional[str]
    model: Optional[str]
    brand: Optional[str]
    upc: Optional[str]
    sku: Optional[str]
    release_date: Optional[Any] = Field(alias="releaseDate")
    production_date: Optional[Any] = Field(alias="productionDate")


class QueryProductsProductsResultsAddress(BaseModel):
    street_address: Optional[str] = Field(alias="streetAddress")
    city: Optional[str]
    region: Optional[str]
    country: Optional[str]
    postal_code: Optional[str] = Field(alias="postalCode")


QueryProducts.model_rebuild()
QueryProductsProducts.model_rebuild()
QueryProductsProductsResults.model_rebuild()
