# Generated by ariadne-codegen
# Source: ./documents

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import ContentTypes, EntityState, FileTypes


class IngestBatch(BaseModel):
    ingest_batch: Optional[List[Optional["IngestBatchIngestBatch"]]] = Field(
        alias="ingestBatch"
    )


class IngestBatchIngestBatch(BaseModel):
    id: str
    name: str
    state: EntityState
    type: Optional[ContentTypes]
    file_type: Optional[FileTypes] = Field(alias="fileType")
    mime_type: Optional[str] = Field(alias="mimeType")
    uri: Optional[Any]
    collections: Optional[List[Optional["IngestBatchIngestBatchCollections"]]]


class IngestBatchIngestBatchCollections(BaseModel):
    id: str
    name: str


IngestBatch.model_rebuild()
IngestBatchIngestBatch.model_rebuild()
